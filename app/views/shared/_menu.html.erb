<%
  dom_id ||= 'menu'
  caching = (cache_menu ||= RefinerySetting.find_or_set(:cache_menu, false))
  cache_key = [Refinery.base_cache_key, 'pages_menus', dom_id, Globalize.locale].join('_')
  # cache the pages first
  collection = if caching
    Rails.cache.fetch(cache_key) { (collection ||= @menu_pages).to_a }
  else
    (collection ||= @menu_pages).to_a
  end

  # cache the generation of the menu based on the pages.
  cache_if(caching, ([cache_key, cache_path ||= request.path].join('_'))) do
    # Select top menu items unless 'roots' is supplied.
    if (roots ||= collection.select{|c| c.parent_id.nil?}).present?
      css = [(css || 'menu'), 'clearfix'].flatten.join(' ')
      hide_children = RefinerySetting.find_or_set(:menu_hide_children, false) if hide_children.nil?
  -%>
      <nav id='<%= dom_id %>' class='<%= css %>'>
        <ul>
          <%= render :partial => '/shared/menu_branch',
                     :collection => roots,
                     :locals => {
                       :hide_children => hide_children,
                       :sibling_count => (roots.length - 1),
                       :collection => collection,
                       :apply_css => true #if you don't care about class='first' class='last' or class='selected' set apply_css to false for speed.
                     }
          -%>
        </ul>
      </nav>
  <% end -%>
<% end -%>
